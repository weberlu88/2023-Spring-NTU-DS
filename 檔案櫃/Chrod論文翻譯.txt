摘要——對等應用程序面臨的一個基本問題是存儲所需數據項的節點的有效位置。 本文介紹了 Chord，一種解決此問題的分佈式查找協議。 Chord 只支持一個操作：給定一個鍵，它將鍵映射到一個節點上。 通過將鍵與每個數據項相關聯，並將鍵/數據對存儲在鍵映射到的節點上，可以在 Chord 之上輕鬆實現數據定位。 當節點加入和離開系統時，Chord 可以有效地適應，並且即使系統不斷變化也可以回答查詢。 理論分析和模擬的結果表明，Chord 是可擴展的：通信成本和每個節點維護的狀態與 Chord 節點的數量成對數關係。 索引詞——分佈式可擴展算法、查找協議、對等網絡。

---

I. 簡介 
點對點系統和應用程序是沒有任何集中控製或分層組織的分佈式系統，其中每個節點運行具有等效功能的軟件。 回顧最近的點對點應用程序的特性，可以得出一個長長的列表：冗餘存儲、永久性、附近服務器的選擇、匿名性、搜索、身份驗證和分層命名。 儘管有這些豐富的功能，但大多數對等系統的核心操作是數據項的有效定位。 本文的貢獻是一個可擴展的協議，用於在具有頻繁節點到達和離開的動態對等系統中進行查找。 Chord 協議只支持一種操作：給定一個密鑰，它將密鑰映射到一個節點上。 根據使用 Chord 的應用程序，該節點可能負責存儲與鍵關聯的值。 Chord 使用一致性哈希 [12] 將密鑰分配給 Chord 節點。 一致性哈希傾向於平衡負載，因為每個節點接收到大致相同數量的密鑰，並且當節點加入和離開系統時需要相對較少的密鑰移動。 以前關於一致性哈希的工作假設每個節點都知道系統中的大多數其他節點，這種方法不能很好地擴展到大量節點。 相比之下，每個 Chord 節點只需要有關其他幾個節點的“路由”信息。 因為路由表是分佈式的，所以 Chord 節點與其他節點通信以執行查找。 在穩定狀態下，在 -node 系統中，每個節點只維護有關其他節點的信息，並通過向其他節點發送消息來解決所有查找。 Chord 在節點加入和離開系統時維護其路由信息。 Chord 節點需要有關其他節點的信息以進行高效路由，但當該信息過時時性能會適度下降。 這在實踐中很重要，因為節點會任意加入和離開，甚至狀態的一致性可能很難保持。 每個節點只需要一條信息是正確的，Chord 就可以保證查詢的正確（儘管可能很慢）路由； Chord 有一個簡單的算法，用於在動態環境中維護此信息。 本文的貢獻是 Chord 算法、其正確性的證明以及證明算法強度的仿真結果。我們還報告了一些關於如何擴展 Chord 路由協議以考慮物理網絡拓撲的初步結果。 對 Chord 的應用程序以及 Chord 在小型 Internet 測試台上的表現感興趣的讀者可以參考 Dabek 等人。 [9]. 其中報告的結果與本文中的模擬結果一致。 本文的其餘部分結構如下。 第二節將 Chord 與相關工作進行比較。 第三部分介紹了激發 Chord 協議的系統模型。 第四節介紹了 Chord 協議並證明了它的幾個屬性。 第五部分展示了支持我們關於 Chord 性能的聲明的模擬。 最後，我們在第七節總結了我們的貢獻。

---

III. SYSTEM MODEL 
Chord通過解決這些難題簡化了點對點系統和基於它的應用程序的設計。
• 負載平衡：Chord 充當分佈式哈希函數，將密鑰均勻分佈在節點上； 這提供了一定程度的自然負載平衡。 
• 去中心化：Chord是完全分佈式的； 沒有節點比其他節點更重要。 這提高了健壯性，並使 Chord 適合鬆散組織的對等應用程序。 
• 可擴展性：Chord 查找的成本隨著節點數量的增長而增長(log)，因此即使是非常大的系統也是可行的。 無需調整參數即可實現這種縮放。 
• 可用性：Chord 自動調整其內部表以反映新加入的節點以及節點故障，確保除非底層網絡出現重大故障，否則始終可以找到負責密鑰的節點。 即使系統處於不斷變化的狀態也是如此。
• 靈活的命名：Chord 對其查找的鍵的結構沒有任何限制； 和弦鍵空間是平坦的。 這為應用程序在如何將自己的名稱映射到和弦鍵方面提供了很大的靈活性。

Chord 軟件採用庫的形式與使用它的應用程序鏈接。 該應用程序以兩種主要方式與 Chord 交互。 首先，Chord 庫提供了一個函數，可以生成負責密鑰的節點的 IP 地址。 其次，每個節點上的 Chord 軟件通知應用程序該節點負責的密鑰集發生變化。 例如，這允許應用程序軟件在新節點加入時將相應的值移動到它們的新位置。
使用 Chord 的應用程序負責提供任何所需的身份驗證、緩存、複製和用戶友好的數據命名。 Chord 的扁平鍵空間簡化了這些功能的實現。 例如，應用程序可以通過將數據存儲在從數據的加密哈希派生的 Chord 密鑰下來驗證數據。 同樣，應用程序可以通過將數據存儲在從數據的應用程序級標識符派生的兩個不同的 Chord 鍵下來複製數據。

以下是 Chord 可以為其提供良好基礎的應用示例。
